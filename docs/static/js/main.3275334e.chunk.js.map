{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","arr","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,UACI,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACTC,EADS,iDACuCC,UAAUH,GADjD,+DAEWI,MAAMF,GAFjB,cAETG,EAFS,gBAGMA,EAAUC,OAHhB,uBAGRC,EAHQ,EAGRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAT1B,kBAgBRM,GAhBQ,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAInC,OAFAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAGlB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAE/BqB,KAAM,GACNe,SAAS,IALyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAbAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IAEGuB,EDjBuBK,CAAa5B,GAA/Ba,EAJuB,EAI5BN,KAAYe,EAJgB,EAIhBA,QAYnB,OACI,qCACI,6BAAKtB,IAEJsB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAACoB,GACT,OACI,cAAC,EAAD,eAESA,GADAA,EAAIlB,aEQ1BmB,EAnCM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAWvB,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWtB,KAAI,SAACT,GAChB,OAAO,cAAC,EAAD,CAEGA,SAAUA,GADLA,Y,MCpBjCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3275334e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length>2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>   \r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />         \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async(category) =>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QIZbxiUbStXe9siyFwCcGPSJVwx5qhVx`;\r\n        const respuesta =   await fetch(url);\r\n        const {data} = await respuesta.json();\r\n\r\n        const gifs = data.map( arr =>{\r\n            return{\r\n                id: arr.id,\r\n                title: arr.title,\r\n                url: arr.images.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        // console.log(gifs);\r\n        // setImages(gifs);\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n\r\n    console.log({id,title,url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     getGifs( category )\r\n    //         .then(imgs=> setImages(imgs))\r\n    // }, [ category ]);\r\n\r\n\r\n\r\n    // getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( (img)=>{\r\n                        return(\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                { ...img }\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n \r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        \r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n\r\n    }, [category])\r\n\r\n    return state; // { data: [], loading: true };\r\n\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n// import PropTypes from 'prop-types'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories([...categories,'Fairy Tail']);\r\n    //     setCategories( cats => [...cats, 'Fairy Tail']);\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>  \r\n          <AddCategory setCategories={setCategories}/>\r\n          <hr></hr>\r\n\r\n          <ol>\r\n              {\r\n                  categories.map((category)=>{\r\n                  return <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                         />\r\n                  })\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}